var auto_complete=['Tags','Setup','Teardown','Template','Timeout','Arguments','Return','Library','Resource','Variables','Documentation','Metadata','FOR','IN','IN RANGE','IN ENUMERATE','IN ZIP','END','Suite Setup','Suite Teardown','Force Tags','Default Tags','Test Setup','Test Teardown','Test Template','Test Timeout','Task Setup','Task Teardown','Task Template','Task Timeout','IN','FOR','END','Tags','Setup','IN ZIP','Return','Timeout','Library','Metadata','Template','Teardown','Resource','IN RANGE','Arguments','Variables','Second关键字','Task Setup','Force Tags','Test Setup','Suite Setup','No Operation','IN ENUMERATE','Test Timeout','Task Timeout','Touch	[path]','Default Tags','Run	[command]','Test Teardown','Exit For Loop','Test Template','Documentation','Task Teardown','Task Template','Suite Teardown','Set Tags	[*tags]','Fst第一个关键字	[arg1]','Split Path	[path]','Continue For Loop','Catenate	[*items]','Get Length	[item]','Remove File	[path]','Comment	[*messages]','Remove Tags	[*tags]','Create List	[*items]','Get File Size	[path]','Log Many	[*messages]','Remove Files	[*paths]','Set Log Level	[level]','Split Extension	[path]','Get Binary File	[path]','Empty Directory	[path]','Set Variable	[*values]','Import Resource	[path]','Fatal Error	[msg=None]','Get Line Count	[string]','Fail	[msg=None]	[*tags]','Create Directory	[path]','Replace Variables	[text]','Convert To String	[item]','Run Keywords	[*keywords]','Convert To Boolean	[item]','Get Environment Variables','Get Count	[item1]	[item2]','Regexp Escape	[*patterns]','Join Path	[base]	[*parts]','Join Paths	[base]	[*paths]','Run Keyword	[name]	[*args]','Log Variables	[level=INFO]','Create Dictionary	[*items]','Sleep	[time_]	[reason=None]','Run And Return Rc	[command]','Exit For Loop If	[condition]','Convert To Lowercase	[string]','Convert To Uppercase	[string]','Import Library	[name]	[*args]','Should Exist	[path]	[msg=None]','Get Line	[string]	[line_number]','Import Variables	[path]	[*args]','Move File	[source]	[destination]','Continue For Loop If	[condition]','Copy File	[source]	[destination]','Pass Execution	[message]	[*tags]','Set Modified Time	[path]	[mtime]','Should Be Empty	[item]	[msg=None]','Reload Library	[name_or_instance]','Fetch From Left	[string]	[marker]','Set Test Variable	[name]	[*values]','Should Not Exist	[path]	[msg=None]','Should Be String	[item]	[msg=None]','Set Task Variable	[name]	[*values]','Fetch From Right	[string]	[marker]','Create Binary File	[path]	[content]','File Should Exist	[path]	[msg=None]','Get Variables	[no_decoration=False]','Split String To Characters	[string]','Set Suite Variable	[name]	[*values]','Remove String	[string]	[*removables]','Return From Keyword	[*return_values]','Set Global Variable	[name]	[*values]','Remove Environment Variable	[*names]','Move Files	[*sources_and_destination]','Copy Directory	[source]	[destination]','Convert To Integer	[item]	[base=None]','Move Directory	[source]	[destination]','Set Variable If	[condition]	[*values]','Copy Files	[*sources_and_destination]','Should Be True	[condition]	[msg=None]','Run Keyword And Return	[name]	[*args]','Should Not Be Empty	[item]	[msg=None]','Keyword Should Exist	[name]	[msg=None]','Run And Return Rc And Output	[command]','File Should Be Empty	[path]	[msg=None]','Log Environment Variables	[level=INFO]','Repeat Keyword	[repeat]	[name]	[*args]','Should Not Be String	[item]	[msg=None]','Set Environment Variable	[name]	[value]','File Should Not Exist	[path]	[msg=None]','Should Be Titlecase	[string]	[msg=None]','Get Time	[format=timestamp]	[time_=NOW]','Should Be Byte String	[item]	[msg=None]','Variable Should Exist	[name]	[msg=None]','Should Be Lowercase	[string]	[msg=None]','Should Be Uppercase	[string]	[msg=None]','Directory Should Exist	[path]	[msg=None]','Get Variable Value	[name]	[default=None]','Set Library Search Order	[*search_order]','Run Keyword If Test Failed	[name]	[*args]','Get Substring	[string]	[start]	[end=None]','Run Keyword If Test Passed	[name]	[*args]','Run Keyword If	[condition]	[name]	[*args]','Remove Directory	[path]	[recursive=False]','Should Not Be True	[condition]	[msg=None]','Set Test Message	[message]	[append=False]','Convert To Number	[item]	[precision=None]','Convert To Bytes	[input]	[input_type=text]','Should Be Unicode String	[item]	[msg=None]','File Should Not Be Empty	[path]	[msg=None]','Directory Should Be Empty	[path]	[msg=None]','Run Keyword And Ignore Error	[name]	[*args]','Get Modified Time	[path]	[format=timestamp]','Length Should Be	[item]	[length]	[msg=None]','Variable Should Not Exist	[name]	[msg=None]','Set Test Documentation	[doc]	[append=False]','Wait Until Removed	[path]	[timeout=1 minute]','Normalize Path	[path]	[case_normalize=False]','Run Keyword And Return Status	[name]	[*args]','Wait Until Created	[path]	[timeout=1 minute]','Split To Lines	[string]	[start=0]	[end=None]','Directory Should Not Exist	[path]	[msg=None]','Get Library Instance	[name=None]	[all=False]','Run Keyword Unless	[condition]	[name]	[*args]','Count Files In Directory	[path]	[pattern=None]','Run Keyword If Any Tests Failed	[name]	[*args]','Count Items In Directory	[path]	[pattern=None]','Run Keyword If Timeout Occurred	[name]	[*args]','Create File	[path]	[content=]	[encoding=UTF-8]','Get Environment Variable	[name]	[default=None]','Run Keyword If All Tests Passed	[name]	[*args]','Directory Should Not Be Empty	[path]	[msg=None]','Pass Execution If	[condition]	[message]	[*tags]','Get Regexp Matches	[string]	[pattern]	[*groups]','Remove String Using Regexp	[string]	[*patterns]','Append To File	[path]	[content]	[encoding=UTF-8]','Format String	[template]	[*positional]	[**named]','Run Keyword And Continue On Failure	[name]	[*args]','Strip String	[string]	[mode=both]	[characters=None]','Return From Keyword If	[condition]	[*return_values]','Environment Variable Should Be Set	[name]	[msg=None]','Count Directories In Directory	[path]	[pattern=None]','Run Keyword And Return If	[condition]	[name]	[*args]','Split String	[string]	[separator=None]	[max_split=-1]','List Directory	[path]	[pattern=None]	[absolute=False]','Evaluate	[expression]	[modules=None]	[namespace=None]','Call Method	[object]	[method_name]	[*args]	[**kwargs]','Run Keyword If Any Critical Tests Failed	[name]	[*args]','Run Keyword If All Critical Tests Passed	[name]	[*args]','Environment Variable Should Not Be Set	[name]	[msg=None]','Set Suite Documentation	[doc]	[append=False]	[top=False]','Log File	[path]	[encoding=UTF-8]	[encoding_errors=strict]','Should Contain Any	[container]	[*items]	[**configuration]','Get File	[path]	[encoding=UTF-8]	[encoding_errors=strict]','Decode Bytes To String	[bytes]	[encoding]	[errors=strict]','Append To Environment Variable	[name]	[*values]	[**config]','Encode String To Bytes	[string]	[encoding]	[errors=strict]','Log To Console	[message]	[stream=STDOUT]	[no_newline=False]','Generate Random String	[length=8]	[chars=[LETTERS][NUMBERS]]','Run Keyword And Expect Error	[expected_error]	[name]	[*args]','Set Suite Metadata	[name]	[value]	[append=False]	[top=False]','Should Not Contain Any	[container]	[*items]	[**configuration]','Replace String	[string]	[search_for]	[replace_with]	[count=-1]','List Files In Directory	[path]	[pattern=None]	[absolute=False]','Convert To Octal	[item]	[base=None]	[prefix=None]	[length=None]','Should Match Regexp	[string]	[pattern]	[msg=None]	[values=True]','Convert To Binary	[item]	[base=None]	[prefix=None]	[length=None]','Split String From Right	[string]	[separator=None]	[max_split=-1]','Get Lines Matching Regexp	[string]	[pattern]	[partial_match=False]','Wait Until Keyword Succeeds	[retry]	[retry_interval]	[name]	[*args]','Should Not Match Regexp	[string]	[pattern]	[msg=None]	[values=True]','List Directories In Directory	[path]	[pattern=None]	[absolute=False]','Grep File	[path]	[pattern]	[encoding=UTF-8]	[encoding_errors=strict]','Get Lines Matching Pattern	[string]	[pattern]	[case_insensitive=False]','Get Lines Containing String	[string]	[pattern]	[case_insensitive=False]','Replace String Using Regexp	[string]	[pattern]	[replace_with]	[count=-1]','Should End With	[str1]	[str2]	[msg=None]	[values=True]	[ignore_case=False]','Should Match	[string]	[pattern]	[msg=None]	[values=True]	[ignore_case=False]','Should Start With	[str1]	[str2]	[msg=None]	[values=True]	[ignore_case=False]','Should Contain X Times	[item1]	[item2]	[count]	[msg=None]	[ignore_case=False]','Should Not End With	[str1]	[str2]	[msg=None]	[values=True]	[ignore_case=False]','Should Contain	[container]	[item]	[msg=None]	[values=True]	[ignore_case=False]','Convert To Hex	[item]	[base=None]	[prefix=None]	[length=None]	[lowercase=False]','Should Not Match	[string]	[pattern]	[msg=None]	[values=True]	[ignore_case=False]','Should Not Start With	[str1]	[str2]	[msg=None]	[values=True]	[ignore_case=False]','Should Be Equal As Integers	[first]	[second]	[msg=None]	[values=True]	[base=None]','Should Not Be Equal	[first]	[second]	[msg=None]	[values=True]	[ignore_case=False]','Should Be Equal As Numbers	[first]	[second]	[msg=None]	[values=True]	[precision=6]','Should Not Contain	[container]	[item]	[msg=None]	[values=True]	[ignore_case=False]','Log	[message]	[level=INFO]	[html=False]	[console=False]	[repr=False]	[formatter=str]','Should Not Be Equal As Integers	[first]	[second]	[msg=None]	[values=True]	[base=None]','Should Not Be Equal As Numbers	[first]	[second]	[msg=None]	[values=True]	[precision=6]','Should Not Be Equal As Strings	[first]	[second]	[msg=None]	[values=True]	[ignore_case=False]','Should Be Equal	[first]	[second]	[msg=None]	[values=True]	[ignore_case=False]	[formatter=str]','Should Be Equal As Strings	[first]	[second]	[msg=None]	[values=True]	[ignore_case=False]	[formatter=str]'];